---

- name: Node.js | check nodejs installed
  command: test -x /usr/bin/nodejs
  register: nodejs_present
  ignore_errors: yes

- name: Node.js | create temporary directory
  command: mktemp -d
  register: tempdir
  when: nodejs_present|failed

- name: Node.js | Add repository for package
  get_url: url='http://nodejs.org/dist/node-latest.tar.gz' dest={{ tempdir.stdout }}
  when: nodejs_present|failed


- name: Node.js | Install package
  apt: pkg={{ item }} state=present
  with_items:
    - python
    - g++
    - make
    - checkinstall
    - fakeroot
  when: nodejs_present|failed

- name: Node.js | 
  unarchive: src={{ tempdir.stdout }}/node-latest.tar.gz dest={{ tempdir.stdout }}/node-latest
  when: nodejs_present|failed

- name: Node.js | 
  command: cd {{ tempdir.stdout }}/node-latest && ./configure
  when: nodejs_present|failed

- name: Node.js | 
  command: cd {{ tempdir.stdout }}/node-latest && fakeroot checkinstall -y --install=no --pkgversion $(echo $(pwd) | sed -n -re's/.+node-v(.+)$/\1/p') make -j$(($(nproc)+1)) install
  when: nodejs_present|failed

- name: Node.js | 
  command: dpkg -i node_*
  when: nodejs_present|failed

- name: NPM | check nodejs installed
  command: test -x {{ tempdir.stdout }}/install.sh
  register: npm_present
  ignore_errors: yes

- name: NPM | download file for installation
  get_url: url=https://www.npmjs.org/install.sh dest={{ tempdir.stdout }}
  register: npm_present|failed

- name: NPM | Installation package
  command: sh {{ tempdir.stdout }}/install.sh
  register: npm_present|failed